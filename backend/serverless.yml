service: semsem-service

plugins:
  - serverless-plugin-typescript
  - serverless-offline

provider:
  name: aws
  runtime: nodejs18.x
  region: ap-northeast-2
  httpApi:
    cors: true
  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    DYNAMODB_TABLE: cal_table
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 'arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}'

functions:
  api:
    handler: src/lambda.handler
    events:
      - httpApi:
          method: ANY
          path: /
      - httpApi:
          method: ANY
          path: /{proxy+}

custom:
  serverless-offline:
    httpPort: 8080
    noPrependStageInUrl: true

package:
  individually: true
